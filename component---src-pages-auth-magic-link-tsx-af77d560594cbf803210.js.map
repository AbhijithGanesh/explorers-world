{"version":3,"file":"component---src-pages-auth-magic-link-tsx-af77d560594cbf803210.js","mappings":"0LAmCA,UA9BkB,WAChB,OAA0BA,EAAAA,EAAAA,UAAS,IAA5BC,EAAP,KAAcC,EAAd,KACA,OACEC,EAAAA,cAACC,EAAAA,EAAD,KACED,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAAAA,UAAAA,CAASE,UAAU,yEAAnB,SAGAF,EAAAA,cAAAA,QAAAA,CACEE,UAAU,wGACVC,KAAK,QACLC,KAAK,QACLC,YAAY,aACZC,aAAa,WACbC,SAAU,SAACC,GAAD,OAAOT,EAASS,EAAEC,OAAOC,MAAzB,IAEZV,EAAAA,cAAAA,UAAAA,CAASE,UAAU,2BACjBF,EAAAA,cAAAA,SAAAA,CACEE,UAAU,+EACVS,SAAO,iBAAE,qFAAAC,EAAAA,KAAAA,EACDC,EAAAA,EAAAA,KAAAA,OAAqB,CAAEf,MAAOA,IAD7B,sCAAF,MAFT,eAjBV,C","sources":["webpack://explorer-world/./src/pages/auth/magicLink.tsx"],"sourcesContent":["import * as React from \"react\";\r\nimport { useState } from \"react\";\r\nimport Layout from \"../../components/layout\";\r\nimport { supabase } from \"../../utils/supabase\";\r\n\r\nconst MagicLink = (): JSX.Element => {\r\n  const [email, setEmail] = useState(\"\");\r\n  return (\r\n    <Layout>\r\n      <>\r\n        <section className=\"flex py-8 text-center text-white text-4xl font-extrabold hover:italic\">\r\n          Login\r\n        </section>\r\n        <input\r\n          className=\"bg-white text-black flex flex-auto justify-start place-content-center rounded-md w-full py-1 px-2 m-1\"\r\n          type=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"Your Email\"\r\n          autoComplete=\"username\"\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <section className=\"flex flex-1 justify-end\">\r\n          <button\r\n            className=\" text-white text-lg font-medium rounded-md lg:p-1 m-2 sm:text-md bg-teal-600\"\r\n            onClick={async () => {\r\n              await supabase.auth.signIn({ email: email });\r\n            }}\r\n          >\r\n            Send Link\r\n          </button>\r\n        </section>\r\n      </>\r\n    </Layout>\r\n  );\r\n};\r\nexport default MagicLink;\r\n"],"names":["useState","email","setEmail","React","Layout","className","type","name","placeholder","autoComplete","onChange","e","target","value","onClick","_context","supabase"],"sourceRoot":""}