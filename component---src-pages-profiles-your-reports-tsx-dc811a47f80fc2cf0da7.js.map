{"version":3,"file":"component---src-pages-profiles-your-reports-tsx-dc811a47f80fc2cf0da7.js","mappings":"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","sources":["webpack://explorer-world/./src/pages/profiles/your-reports.tsx"],"sourcesContent":["import { Menu } from \"@headlessui/react\";\r\nimport { navigate } from \"gatsby\";\r\nimport * as React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { AiOutlineUsergroupDelete } from \"react-icons/ai\";\r\nimport { FaRegEdit } from \"react-icons/fa\";\r\nimport { FiUser } from \"react-icons/fi\";\r\nimport { GiSandsOfTime } from \"react-icons/gi\";\r\nimport { MdLeaderboard, MdSearch } from \"react-icons/md\";\r\nimport Layout from \"../../components/layout\";\r\nimport { DropDownMenu, MenuItem } from \"../../components/navbar/dropdown\";\r\nimport Navbar from \"../../components/navbar/Navbar\";\r\nimport { supabase } from \"../../utils/supabase\";\r\n\r\ninterface tableHeadProps {\r\n  name: String | JSX.Element;\r\n}\r\n\r\nlet Table_Head = ({ name }: tableHeadProps): JSX.Element => {\r\n  return (\r\n    <>\r\n      <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-center text-xs font-semibold text-gray-600 uppercase tracking-wider\">\r\n        {name}\r\n      </th>\r\n    </>\r\n  );\r\n};\r\n\r\ntype serverDataType = {\r\n  title: String;\r\n  unique_id: String;\r\n  last_updated_at: typeof String;\r\n  links: String;\r\n  userid: String;\r\n};\r\n\r\nlet Table_Data = ({ name }: tableHeadProps): JSX.Element => {\r\n  return (\r\n    <td className=\"py-5 border-b border-gray-200 text-sm\">\r\n      <p className=\"text-teal-50 text-center whitespace-no-wrap\">{name}</p>\r\n    </td>\r\n  );\r\n};\r\n\r\nlet Reports = ({ serverData }: any): React.ReactNode => {\r\n  useEffect(() => {\r\n    return () => {\r\n      if (!supabase.auth.session()?.user) {\r\n        navigate(\"/login\");\r\n      }\r\n    };\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Layout>\r\n        <Navbar>\r\n          <section className=\"z-10\">\r\n            <DropDownMenu>\r\n              <MenuItem\r\n                icon={<MdLeaderboard />}\r\n                link=\"/leaderboard\"\r\n                text=\"View Leaderboard\"\r\n              />\r\n              <MenuItem\r\n                icon={<GiSandsOfTime />}\r\n                link={\"/profiles/new-report\"}\r\n                text={\"Submit a new report\"}\r\n              />\r\n              <MenuItem\r\n                icon={<MdSearch className=\"text-xl\" />}\r\n                link=\"/search\"\r\n                text=\"Search for explorers\"\r\n              />\r\n              <MenuItem icon={<FiUser />} link=\"/profiles\" text=\"My Profile\" />\r\n              <Menu.Item>\r\n                <button\r\n                  className=\"z-2 top flex justify-start gap-2 bg-white text-black font-medium hover:bg-emerald-300 hover:font-bold group w-full items-center rounded-md p-2 text-md\"\r\n                  onClick={async (e) => {\r\n                    await supabase.auth.signOut();\r\n                    navigate(\"/\");\r\n                  }}\r\n                >\r\n                  <section className=\"m-1\">\r\n                    <AiOutlineUsergroupDelete />\r\n                  </section>\r\n                  LogOut\r\n                </button>\r\n              </Menu.Item>\r\n            </DropDownMenu>\r\n          </section>\r\n        </Navbar>\r\n\r\n        <section className=\"text-white font-semibold\">\r\n          <section className=\"py-8\">\r\n            <table className=\"w-full leading-normal\">\r\n              <thead>\r\n                <tr>\r\n                  <Table_Head name={\"Name\"} />\r\n                  <Table_Head name={\"Created At\"} />\r\n                  <Table_Head name={\"Products\"} />\r\n                  <Table_Head name={\"Edit\"} />\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {serverData.map((i: serverDataType) => {\r\n                  if (i.userid == supabase.auth.session()?.user?.id!) {\r\n                    return (\r\n                      <tr>\r\n                        <Table_Data\r\n                          key={serverData.indexOf(i)}\r\n                          name={i.title}\r\n                        />\r\n                        <Table_Data\r\n                          key={serverData.indexOf(i)}\r\n                          name={i.links}\r\n                        />\r\n                        <Table_Data\r\n                          key={serverData.indexOf(i)}\r\n                          name={`${new Date(`${i.last_updated_at}`)\r\n                            .toUTCString()\r\n                            .substring(0, 16)}`}\r\n                        />\r\n                        <Table_Data\r\n                          name={\r\n                            <>\r\n                              <button\r\n                                onClick={() => {\r\n                                  navigate(\r\n                                    `/profiles/${i.unique_id}/edit-report`\r\n                                  );\r\n                                }}\r\n                              >\r\n                                <FaRegEdit />\r\n                              </button>\r\n                            </>\r\n                          }\r\n                        />\r\n                      </tr>\r\n                    );\r\n                  }\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </section>\r\n        </section>\r\n      </Layout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Reports;\r\n\r\nexport const getServerData = async () => {\r\n  let { error, data, body } = await supabase\r\n    .from(\"Contribution\")\r\n    .select(\"userid, unique_id, title, links, last_updated_at\");\r\n  if (error) {\r\n    return Error(\"Error during fetching\");\r\n  } else {\r\n    return {\r\n      props: data,\r\n      status: 200,\r\n    };\r\n  }\r\n};\r\n"],"names":["Table_Head","name","React","className","Table_Data","serverData","useEffect","supabase","_supabase$auth$sessio","user","navigate","Layout","Navbar","DropDownMenu","MenuItem","icon","MdLeaderboard","link","text","GiSandsOfTime","MdSearch","FiUser","Menu","onClick","e","_context","AiOutlineUsergroupDelete","map","i","userid","_supabase$auth$sessio2","_supabase$auth$sessio3","id","key","indexOf","title","links","Date","last_updated_at","toUTCString","substring","unique_id","FaRegEdit"],"sourceRoot":""}